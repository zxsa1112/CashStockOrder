plugins {
    id 'java'
    id 'application'
}

group 'com.kohyunwoo.kisorder'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.json:json:20240303'
    implementation 'org.apache.pdfbox:pdfbox:2.0.28'
    implementation 'org.apache.pdfbox:pdfbox-tools:2.0.28'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

application {
    mainClass = 'SarifToCsv' // SarifToCsv 클래스 설정
}

jar {
    manifest {
        attributes 'Main-Class': 'SarifToCsv'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    from('src/main/resources/fonts') {
        include '*.TTF'
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'CodeTest']
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    reports {
        junitXml.required = true
        html.required = true
    }
}

tasks.register('createPdfReportDir') {
    doLast {
        mkdir "${buildDir}/reports/pdf"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Copy) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// SARIF 파일을 CSV로 변환하는 작업 추가
task convertSarifToCsv(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'SarifToCsv'
    args 'results.sarif', 'results.csv' // SARIF 파일에서 CSV로 변환하는 인자 설정
}

build.dependsOn createPdfReportDir, convertSarifToCsv
