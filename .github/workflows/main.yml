import jdk.nashorn.internal.objects.NativeJSON;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

name: Java CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run tests
      run: ./gradlew test

    - name: Analyze with CodeQL
      uses: github/codeql-action/analyze@v2
      with:
        category: 'security'

public class TTTC0802U {
    public static void main(String[] args) throws IOException {

        // 국내 주식 주문
        String url = "https://openapi.koreainvestment.com:9443/uapi/domestic-stock/v1/trading/order-cash";
        String tr_id = "TTTC0802U";
        String data = "{\n" +
                "    \"CANO\": \"종합계좌번호\",\n" +
                "    \"ACNT_PRDT_CD\": \"계좌상품코드\",\n" +
                "    \"ACNT_PWD\": \"계좌비밀번호\",\n" +
                "    \"PDNO\": \"상품번호\",\n" +
                "    \"ORD_DVSN\": \"주문구분\",\n" +
                "    \"ORD_QTY\": \"주문수량\",\n" +
                "    \"ORD_UNPR\": \"주문단가\",\n" +
                "    \"CTAC_TLNO\": \"연락전화번호\"\n" +
                "}";
        httpPostBodyConnection(url,data,tr_id);
    }
    public static void httpPostBodyConnection(String UrlData, String ParamData,String TrId) throws IOException {
        String totalUrl = "";
        totalUrl = UrlData.trim().toString();

        URL url = null;
        HttpURLConnection conn = null;

        String responseData = "";
        BufferedReader br = null;

        StringBuffer sb = new StringBuffer();
        String returnData = "";

      try{
        url = new URL(totalUrl);
        conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("POST");
        conn.setRequestProperty("Content-Type", "application/json");
        conn.setRequestProperty("authorization", "Bearer {TOKEN}");
        conn.setRequestProperty("appKey", "PS9zaduQ1xIhuEUAzZ7SrnSz1fuiH8jYC1cg");
        conn.setRequestProperty("appSecret", "MFPUV8rhmZ3JTcBkf477dL1t7j68Qm4cgJQBhAlUZUPm59QPwx8piY0Br0YTbphdOEKIcPmEv7H1UDz7ZoFdu18gbG2Ox0S/uZ7FhyalHyybHNQhfzwAiqZFXt9FC/Tr33syJjvdiKIeoPlCGvSk19BhRcxHJg+/UXG6R7gE661fWx28IXU=");
        conn.setRequestProperty("personalSeckey", "{personalSeckey}");
        conn.setRequestProperty("tr_id", TrId);
        conn.setRequestProperty("tr_cont", " ");
        conn.setRequestProperty("custtype", "법인(B), 개인(P)");
        conn.setRequestProperty("seq_no", "법인(01), 개인( )");
        conn.setRequestProperty("mac_address", "{Mac_address}");
        conn.setRequestProperty("phone_num", "P01011112222");
        conn.setRequestProperty("ip_addr", "{IP_addr}");
        conn.setRequestProperty("hashkey", "{Hash값}");
        conn.setRequestProperty("gt_uid", "{Global UID}");
        conn.setDoOutput(true);

        try (OutputStream os = conn.getOutputStream()) {
            byte request_data[] = ParamData.getBytes("utf-8");
            os.write(request_data);
            os.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        conn.connect();
        System.out.println("http 요청 방식" + "POST BODY JSON");
        System.out.println("http 요청 타입" + "application/json");
        System.out.println("http 요청 주소" + UrlData);
        System.out.println("");

        br = new BufferedReader(new InputStreamReader(conn.getInputStream(), "UTF-8"));
      } catch (IOException e){
          br = new BufferedReader(new InputStreamReader(conn.getErrorStream(), "UTF-8"));
      } finally {
          try {
              sb = new StringBuffer();
              while ((responseData = br.readLine()) != null) {
                  sb.append(responseData);
              }
              returnData = sb.toString();
              String responseCode = String.valueOf(conn.getResponseCode());
              System.out.println("http 응답 코드 : " + responseCode);
              System.out.println("http 응답 데이터 : " + returnData);
              if (br != null){
                  br.close();
              }
          } catch (IOException e){
              throw new RuntimeException("API 응답을 읽는데 실패했습니다.", e);
          }
      }
    }
}
